# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details.
version: 2
jobs:
  build:
    docker:
      # Specify a go version to use in the primary container.  This is the
      # container in which all steps will execute.
      - image: circleci/golang:1.9

      # The CircleCI images contain all the tools for building programs.
      # CircleCI maintains a library of pre-built docker images documented at
      #
      #  https://circleci.com/docs/2.0/circleci-images/
      #
      # Docker compose is used to run each of the secondary images specified
      # here in a container to satisfy any dependencies the application may
      # have when it is run and tested.

    #### The working directory specifies a workspace that persists across jobs
    #### in a single workflow.
    ####
    #### TEMPLATE_NOTE: go expects specific checkout path in the form of a URL.
    #### For example:
    ####
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    ####
    #working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    working_directory: /go/src/github.com/peter-lamanna/simple-service

    steps:
      # Checkout the code from git repository into the working directory.
      - checkout

      #### specify any bash command here prefixed with "- run: "

      # Install go packages
      - run: go get -v -t -d ./...
      
      # Build go program
      - run: go build -o simple-service
      
      #- run: go test -v ./...
      
      # Setup docker environment with docker daemon running.
      - setup_remote_docker:
          docker_layer_caching: true
      
      # Build the docker image based as defined in the Dockerfile.
      - run: docker build --rm=false -t peterlamanna/simple-service .
      
      # Test the docker image.  Run it in the background, send a request to it
      # and then stop it.
      # - "[[ $(curl http://localhost:8080/about) = '{\"Text\":\"Welcome to the Simple Service API, v1.0\"}' ]]"
      # http://localhost:8080/about) = Welcome to Magalix Simple Service!! Your Path is: test!
      - run:
          name: Test Docker Image
          command: |
            docker run -d -p 8080:8080 --name simple-service peterlamanna/simple-service
            sleep 5
            docker exec simple-service "curl --retry 3 --retry-connrefused http://localhost:8080/test"
            docker stop simple-service
      
      # Log in to the docker using the access credentials that were added as
      # environment variables to CircleCI project.  Save the docker image to
      # a repository as the latest, no tag specified.
      - run:
          name: Save Image to Docker Hub Repository
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PWD
            docker push peterlamanna/simple-service
